<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>d46c8324cb31120000f8d856634c9c8d</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;record_update table="sp_widget"&gt;
    &lt;sp_widget action="INSERT_OR_UPDATE"&gt;
        &lt;category&gt;standard&lt;/category&gt;
        &lt;client_script&gt;&lt;![CDATA[// sample use of ng-sortable
function() {
	var c = this;
	c.selected = [];

	// ng-sortable clone means cannot reorder
	c.availableAs = {
		itemMoved: function (event) {
			event.source.itemScope.item.used = true;
		},
		clone: true // clone this side
	}

	c.selectedAs = {
		itemMoved: function (event) {
			// moved back to available
			var item = event.source.itemScope.item;
			moveToAvailable(item);
			removeItem(c.data.all, item);
		},
		dragStart: function () {
			c.availableAs.clone = false;
		},
		dragEnd: function () {
			c.availableAs.clone = true;
		}
	}

	// double moves from Available to Selected
	c.onDblClick = function(item) {
		var t = angular.copy(item);
		item.used = true; // original is now used
		c.selected.push(t);
	}

	// double on selected removes and unsets Available used
	c.onSelDblClick = function(item) {
		moveToAvailable(item);
		removeItem(c.selected, item);
	}

	function removeItem(array, item) {
		var n = array.indexOf(item);
		if (n !== -1)
			array.splice(n, 1);		
	}
	
	function moveToAvailable(item) {
		var t = item.sys_id.value;
		angular.forEach(c.data.all, function(target) {
			if (target.sys_id.value == t)
				target.used = false;
		})		
	}
}]]&gt;&lt;/client_script&gt;
        &lt;controller_as&gt;c&lt;/controller_as&gt;
        &lt;css&gt;.as-sortable-placeholder {
  background-color: #eee;
}

.slush-scrollable {
  height: 240px;
  overflow-y: scroll;
  overflow-x:hidden;
}

.panel  &amp;gt; .list-group:last-child .list-group-item:last-child {
	border-bottom-width: 1px;
  border-bottom-style: solid;
  border-radius: 0;
}

.used {
	max-height: 0;
  overflow: hidden;
  padding: 0;
  border: none;
}

.available &amp;gt; .list-group-item {
	transition: all 1s;
}&lt;/css&gt;
        &lt;data_table&gt;sp_instance&lt;/data_table&gt;
        &lt;demo_data&gt;{
	"href": "www.google.com",
	"button_text": "Go to google"
}&lt;/demo_data&gt;
        &lt;description/&gt;
        &lt;docs/&gt;
        &lt;field_list/&gt;
        &lt;has_preview&gt;true&lt;/has_preview&gt;
        &lt;id&gt;slush-bucket&lt;/id&gt;
        &lt;internal&gt;false&lt;/internal&gt;
        &lt;link/&gt;
        &lt;name&gt;Slush Bucket&lt;/name&gt;
        &lt;option_schema&gt;[{"hint":"Number of Services shown (use this to optimize performance)","name":"number_of_services","default_value":"250","section":"Presentation","label":"Number of Services","type":"integer"}]&lt;/option_schema&gt;
        &lt;public&gt;true&lt;/public&gt;
        &lt;roles/&gt;
        &lt;script&gt;&lt;![CDATA[(function () {
	// grab names of available dependencies
	data.all = [];
	var gr = new GlideRecord('sp_dependency');
	gr.orderBy('name');
	gr.query();
	while (gr.next()) {
		var t = $sp.getRecordElements(gr, 'name,sys_id');
		data.all.push(t);
	}
})();]]&gt;&lt;/script&gt;
        &lt;servicenow&gt;true&lt;/servicenow&gt;
        &lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2016-02-22 17:40:23&lt;/sys_created_on&gt;
        &lt;sys_id&gt;d46c8324cb31120000f8d856634c9c8d&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;267&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Slush Bucket&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Portal - Core" source="com.glide.service-portal"&gt;e858f0b9118033006517bd11ae6a4c0d&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sp_widget_d46c8324cb31120000f8d856634c9c8d&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2017-08-24 19:13:23&lt;/sys_updated_on&gt;
        &lt;template&gt;&lt;![CDATA[&lt;div&gt;
	&lt;h4&gt;Demo use of ng-sortable&lt;/h4&gt;
  &lt;div class="row"&gt;

    &lt;div class="col-sm-4"&gt;
      &lt;div class="panel panel-default"&gt;
        &lt;div class="panel-heading"&gt;
          &lt;h4 class="panel-title"&gt;${Available}&lt;/h4&gt;
        &lt;/div&gt;
        &lt;div class="available list-group slush-scrollable" 
             as-sortable="c.availableAs" 
             ng-model="c.data.all"&gt;
          &lt;div ng-repeat="item in c.data.all | filter:c.search" 
               as-sortable-item 
               ng-dblclick="c.onDblClick(item)"
               ng-class="{used: item.used}"
               class="list-group-item"&gt;
            &lt;div as-sortable-item-handle&gt;
              &lt;span&gt;{{item.name.display_value}}&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;div class="col-sm-4"&gt;
      &lt;div class="panel panel-default"&gt;
        &lt;div class="panel-heading"&gt;
          &lt;h4 class="panel-title"&gt;${Selected}&lt;/h4&gt;
        &lt;/div&gt;
        &lt;div class="list-group slush-scrollable" as-sortable="c.selectedAs" ng-model="c.selected"&gt;
          &lt;div ng-repeat="item in c.selected" 
               as-sortable-item
               ng-dblclick="c.onSelDblClick(item)"
               class="list-group-item"&gt;
            &lt;div as-sortable-item-handle&gt;
              &lt;span&gt;{{item.name.display_value}}&lt;/span&gt;
            &lt;/div&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;  
  &lt;div&gt;
    Drag from one bucket to the other&lt;br/&gt;
    Double click moves from one to the other&lt;br/&gt;
    Rearrange Selected by dragging&lt;br/&gt;
    Supports touch&lt;br/&gt;
    Data is list of sp_dependeny items
  &lt;/div&gt;

&lt;/div&gt;]]&gt;&lt;/template&gt;
    &lt;/sp_widget&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-05-31 14:14:30</sys_created_on>
        <sys_id>b09757f84f313300496900fe9310c7b4</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Slush Bucket</sys_name>
        <sys_package display_value="FairfaxCounty" source="x_339628_fairfaxco">b1051ad14f413300496900fe9310c7cc</sys_package>
        <sys_policy/>
        <sys_scope display_value="FairfaxCounty">b1051ad14f413300496900fe9310c7cc</sys_scope>
        <sys_update_name>sys_metadata_link_b09757f84f313300496900fe9310c7b4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-31 14:14:30</sys_updated_on>
        <tablename>sp_widget</tablename>
    </sys_metadata_link>
</record_update>
