<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>f3336978dbaca2007f3bf5131f9619ec</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;record_update table="sp_widget"&gt;
    &lt;sp_widget action="INSERT_OR_UPDATE"&gt;
        &lt;category/&gt;
        &lt;client_script&gt;&lt;![CDATA[function ($scope, spUtil, $location, spModal, spAriaUtil) {
	var c = this;
	c.m = $scope.data.msgs;
	c.deliverTo = "";
	c.additionalDetails = "";
	
	$scope.$on("$sp.service_catalog.cart.update", function() {
		$scope.server.update().then(function() {
			$scope.$emit("$sp.service_catalog.cart.count", getItemCount());
		});
	});

	c.updateQuantity = function(item) {
		spAriaUtil.sendLiveMessage(c.data.msgs.updatedMsq + " " + item.name + " " + c.data.msgs.quantityToMsg + " " + item.quantity);
		
		c.server.get({
			action: "update_quantity",
			itemID: item.sys_id,
			quantity: item.quantity
		}).then(function(response) {
			$rootScope.$broadcast("$sp.service_catalog.cart.update");
		});
	}

	c.triggerCheckout = function($evt, twostepCheckout) {
		if (twostepCheckout) {
			$location.url('?id=sc_cart');
			return;
		}

		$evt.stopPropagation();
		$evt.preventDefault();

		c.checkoutInProgress = true;
		c.data.action = "checkout";
		c.data.deliverTo = c.deliverTo;
		c.data.additionalDetails = c.additionalDetails;
		c.server.update().then(function(response) {
			c.data.action = null;

			c.checkoutInProgress = false;
			var requestData = $scope.data.requestData;
			issueMessage(requestData.number, requestData.table, requestData.sys_id);
			$rootScope.$broadcast("$sp.service_catalog.cart.update");
		});
	}

	c.removeItem = function($evt, item) {
		$evt.stopPropagation();
		$evt.preventDefault();

		$scope.server.get({
			cartName: "DEFAULT",
			action: "remove_item",
			removeItemID: item.sys_id
		}).then(function(response) {
			c.data.cart = response.data.cart;
			c.data.cartItems = response.data.cartItems;
			spAriaUtil.sendLiveMessage(item.name + " " + c.data.msgs.itemRemovedMsg);
			$rootScope.$broadcast("$sp.service_catalog.cart.update");
		});
	}

	c.clearCart = function() {
		spModal.confirm(c.data.msgs.clearCartConfirmationMsg).then(function(confirmed) {
			if (confirmed) {
				c.server.get({
					action: "clear_cart"
				}).then(function(response) {
					c.data.cart = response.data.cart;
					c.data.cartItems = response.data.cartItems
					$rootScope.$broadcast("$sp.service_catalog.cart.update");
					spUtil.addTrivialMessage(c.data.msgs.cartEmptiedMsg);
				});
			}
		});
	}

	c.editItem = function(itemID) {
		c.server.get({
			itemID: itemID,
			action: "edit_item"
		}).then(function(response) {
			var myModalCtrl;
			var unregister = $scope.$on('$sp.service_catalog.cart.update', function(){
				myModalCtrl.close();
			});

			var myModal = angular.copy(response.data.editVariablesModal);
			myModal.options.afterOpen = function(ctrl){
				myModalCtrl = ctrl;
			};
			myModal.options.afterClose = function() {
				unregister();
				c.editVariablesModal = null;
				myModalCtrl = null;
			};
			c.editVariablesModal = myModal;
		})
	}

	c.saveBundle = function() {
		var saveCartModalCtrl;
		var unregister = $scope.$on('$sp.service_catalog.cart.save_cart', function(){
			saveCartModalCtrl.close();
		});

		var saveCartModal = angular.copy(c.data.saveCartModal);
		saveCartModal.options.afterOpen = function(ctrl){
			saveCartModalCtrl = ctrl;
		};
		saveCartModal.options.afterClose = function() {
			unregister();
			c.saveCartModal = null;
			saveCartModalCtrl = null;
		};
		c.saveCartModal = saveCartModal;
	}

	c.requestedFor = {
		displayValue: c.data.cart.requested_for_display_name,
		value: c.data.cart.requested_for,
		name: 'requested_for'
	};

	$scope.$on("field.change", function(evt, parms) {
		if (parms.field.name == 'requested_for')
			c.data.cart.requested_for = parms.newValue;
	});

	function issueMessage(n, table, sys_id) {
		var page = table == 'sc_request' ? 'sc_request' : 'ticket';
		var t = c.m.createdMsg + " " + n + " - ";
		t += c.m.trackMsg;
		t += ' &lt;a href="?id=' + page + '&amp;table=' + table + '&amp;sys_id=' + sys_id + '"&gt;' + c.m.clickMsg + '&lt;/a&gt;';
		spUtil.addInfoMessage(t);
	}

	$scope.$emit("$sp.service_catalog.cart.count", getItemCount());

	function getItemCount() {
		return c.data.cartItems.length || 0;
	}
}]]&gt;&lt;/client_script&gt;
        &lt;controller_as&gt;c&lt;/controller_as&gt;
        &lt;css&gt;td {
  vertical-align: middle !important;
}

.media-body {
  .btn-link {
    padding-left: 0;
    padding-right: 0;
    color: $primary;

    &amp;amp;:hover {
      color: darken($primary, 10%);
    }

    &amp;amp;:focus {
      color: darken($primary, 10%);
    }
  }
}


.action-btn {
  display: block;
  width: 100%;
  margin-top: 5px;

  &amp;amp;.btn-link {
    color: $primary;
  }
}

.list-group {
  max-height: 250px;
  overflow-y: auto;
}

.list-group-item.ng-enter {
  transition: all 1s;
  -webkit-transition: all 1s;

  background-color: #c0dcfa;
}

.list-group-item.ng-enter-active {
  background-color: #fff;
}

.empty-cart {
  font-style: italic;
  text-align: center;
  margin-top: 10px;
  margin-bottom: 7px;
}

.view-carts-link {
  text-align: center;
  display: block;
}

.order-details-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin: 5px 10px 10px 10px;

  .order-details {
    padding: 5px;

    textarea {
      resize: none;
      flex-basis: 100%;
      flex-shrink: 1;
      width: 100%;
      box-sizing: border-box;
    }
  }

  .requested-for-details {
    flex: 1 0 auto;
    max-width: 100%;
  }

  .special-instructions-details {
    textarea {
      height: calc(100% - 25px);
    }
  }
}

.item-image {
  margin-left: auto;
  margin-right: auto;
  margin-top: 10px;
}

.empty-state-content {
  margin-top: 30px;

  &amp;amp;.small-cart {
    margin-top: 0px;
    padding: 10px 20px;
  }

  .fa-shopping-cart {
    color: $gray-light;
    font-size: 80px;
    display: block;
    text-align: center;

    &amp;amp;.small-cart {
      font-size: 40px;
    }
  }

  .h3 {
    text-align: center;
    margin-bottom: 5px;
  }

  .h4 {
    text-align: center;
    margin-bottom: 5px;
  }

  p {
    text-align: center;
    margin-bottom: 20px;
  }

  .btn {
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: 300px;
    max-width: 100%;
    margin-bottom: 35px;
  }
}

.large-checkout {
  display: inline-block;
  float: none !important;
  width: 100%;
  margin-top: 15px;
}
&lt;/css&gt;
        &lt;data_table&gt;sp_instance&lt;/data_table&gt;
        &lt;demo_data&gt;{
  "options": {
    "color": "default",
		"maximum_entries": 3
  }
}&lt;/demo_data&gt;
        &lt;description/&gt;
        &lt;docs/&gt;
        &lt;field_list&gt;color&lt;/field_list&gt;
        &lt;has_preview&gt;false&lt;/has_preview&gt;
        &lt;id&gt;sc-shopping-cart&lt;/id&gt;
        &lt;internal&gt;false&lt;/internal&gt;
        &lt;link/&gt;
        &lt;name&gt;SC Shopping Cart Deprecated&lt;/name&gt;
        &lt;option_schema&gt;[{"name":"cartTemplate","section":"Behavior","label":"Cart Template","type":"string"},{"hint":"This will sync cart across different sessions","name":"auto_update_cart","default_value":"false","section":"Behavior","label":"Auto update cart","type":"boolean"}]&lt;/option_schema&gt;
        &lt;public&gt;false&lt;/public&gt;
        &lt;roles/&gt;
        &lt;script&gt;&lt;![CDATA[(function() {
	var m = data.msgs = {};
	m.createdMsg = gs.getMessage("Created");
	m.trackMsg = gs.getMessage("track using 'Requests' in the header or");
	m.clickMsg = gs.getMessage("click here to view");
	m.cartEmptiedMsg = gs.getMessage("Your cart has been emptied");
	m.itemRemovedMsg = gs.getMessage("has been removed from your cart");
	m.updatedMsq = gs.getMessage("Updated");
	m.quantityToMsg = gs.getMessage("quantity to");
	m.clearCartConfirmationMsg = gs.getMessage("Are you sure you want to empty your cart?");
	var userID = gs.getUser().getID();
	var cart = new SPCart(input.cartName, userID);

	if (input &amp;&amp; input.action === "edit_item") {
		data.editVariablesModal = $sp.getWidget('widget-modal', {embeddedWidgetId: 'sp-variable-editor', embeddedWidgetOptions: {sys_id: input.itemID, table: "sc_cart_item", showItemTitle: true, isOrdering: true}});
		return;
	}

	if (input &amp;&amp; input.action === "update_quantity") {
		var cartItemGR = new GlideRecord("sc_cart_item");
		if (cartItemGR.get(input.itemID)) {
			cartItemGR.setValue("quantity", input.quantity);
			cartItemGR.update();
		}
	}

	if (input &amp;&amp; input.action === "checkout") {
		cart.setSpecialInstructions(input.additionalDetails);
		cart.setRequestedFor(input.cart.requested_for);
		cart.setDeliveryAddress(input.deliverTo);
		var request = cart.placeOrder();
		data.requestData = {
			number: request.getValue("number"),
			table: request.getTableName(),
			sys_id: request.getUniqueValue()
		}
		cart.setSpecialInstructions("");
		cart.setRequestedFor(userID);
		cart.setDeliveryAddress("");
	}

	if (input &amp;&amp; input.action === "remove_item") {
		var itemGR = new GlideRecord('sc_cart_item');
		if (itemGR.get(input.removeItemID))
			itemGR.deleteRecord();
	}

	if (input &amp;&amp; input.action === "clear_cart") {
		cart.clearCart();
	}

	if (input &amp;&amp; input.action === "save_cart") {
		var newCart = new SPCart(input.newCartName, userID);
		newCart.loadCart(cart.getCartID());
	}

	data.sys_properties = {
		twostep_checkout: gs.getProperty("glide.sc.checkout.twostep", "false") == 'true'
	};

	var cartID = cart.getCartID();
	data.saveCartModal = $sp.getWidget('widget-modal', {embeddedWidgetId: 'sc_save_bundle', embeddedWidgetOptions: {}});

	data.cart = cart.getCartObj();
	data.cartItems = cart.getItems();

})();]]&gt;&lt;/script&gt;
        &lt;servicenow&gt;true&lt;/servicenow&gt;
        &lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2016-07-08 21:32:00&lt;/sys_created_on&gt;
        &lt;sys_id&gt;f3336978dbaca2007f3bf5131f9619ec&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;285&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;SC Shopping Cart Deprecated&lt;/sys_name&gt;
        &lt;sys_package display_value="Service Portal - Service Catalog (do not activate...see plugin description)" source="com.glide.service-portal.service-catalog"&gt;5e687cb9118033006517bd11ae6a4c4a&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sp_widget_f3336978dbaca2007f3bf5131f9619ec&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2017-09-26 18:38:31&lt;/sys_updated_on&gt;
        &lt;template&gt;&lt;![CDATA[&lt;div ng-if="options.cartTemplate"&gt;
	&lt;div ng-include="options.cartTemplate"&gt;&lt;/div&gt;

  &lt;sp-widget widget="c.editVariablesModal" ng-if="c.editVariablesModal"&gt;&lt;/sp-widget&gt;
  &lt;sp-widget widget="c.saveCartModal" ng-if="c.saveCartModal"&gt;&lt;/sp-widget&gt;
  
&lt;/div&gt;

&lt;div ng-if="!options.cartTemplate"&gt;
  &lt;div class="alert alert-danger" role="alert"&gt;
    &lt;strong&gt;${Error}: &lt;/strong&gt;
    ${Please provide a cart template to render.}
  &lt;/div&gt;
&lt;/div&gt;]]&gt;&lt;/template&gt;
    &lt;/sp_widget&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-05-31 14:14:31</sys_created_on>
        <sys_id>599757f84f313300496900fe9310c7e3</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>SC Shopping Cart Deprecated</sys_name>
        <sys_package display_value="FairfaxCounty" source="x_339628_fairfaxco">b1051ad14f413300496900fe9310c7cc</sys_package>
        <sys_policy/>
        <sys_scope display_value="FairfaxCounty">b1051ad14f413300496900fe9310c7cc</sys_scope>
        <sys_update_name>sys_metadata_link_599757f84f313300496900fe9310c7e3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-31 14:14:31</sys_updated_on>
        <tablename>sp_widget</tablename>
    </sys_metadata_link>
</record_update>
