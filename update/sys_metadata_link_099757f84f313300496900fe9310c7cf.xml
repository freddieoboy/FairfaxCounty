<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_metadata_link">
    <sys_metadata_link action="INSERT_OR_UPDATE">
        <directory>update</directory>
        <documentkey>e03050735b400300514d484c11f91a80</documentkey>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;record_update table="sp_widget"&gt;
    &lt;sp_widget action="INSERT_OR_UPDATE"&gt;
        &lt;category/&gt;
        &lt;client_script&gt;&lt;![CDATA[function($scope, $sce, spModal, $rootScope) {
  /* widget controller */
  var c = this;
  c.KEYS = {TAB: 9, LEFT: 37, RIGHT: 39, UP: 38, DOWN: 40};

  var sortRecos = function(recos) {
    var implList = recos.idList.filter(function(id) {return recos.idMap[id].state === c.states.implemented});
    var otherList = recos.idList.filter(function(id) {return recos.idMap[id].state != c.states.implemented});
    implList.sort(function(a, b) {
      return recos.idMap[b].implementedDateNumeric - recos.idMap[a].implementedDateNumeric;
    });
    otherList.sort(function(a, b) {
      return recos.idMap[b].weightedScore - recos.idMap[a].weightedScore;
    });

    recos.idList = otherList.concat(implList);
  };

  c.sort = function() {
    sortRecos(c.data.recommendations);
  };

  var init = function () {
    c.states = {
      all: 'all',
      none: 'none',
      accepted: 'accepted',
      rejected: 'rejected',
      implemented: 'implemented'
    };
	c.tabs = ['all', 'implemented', 'accepted'];
    c.tab = c.states.all;
    c.counts = c.data.recommendations.counts;
    c.sort();

    // Broadcast the selected tab so that trends can be updated
    $scope.$watch('c.tab', function() {
      var showImplemented = (c.tab === c.states.implemented);
      var data = {
		activeTab: c.tab,
        showImplemented: showImplemented,
        recommendations: showImplemented ? getImplemented(c.data.recommendations) : []
      };
      updateCurrentLimit();

      $rootScope.$broadcast('recommendations.tab', data);
    });
  };
  init();

  c.trustAsHtml = function(html) {
    return $sce.trustAsHtml(html);
  };

  c.recoFilter = function(id) {
    var state = c.data.recommendations.idMap[id].state;
    return (state != c.states.rejected)
        &amp;&amp; ((c.tab === c.states.all &amp;&amp; state != c.states.implemented)
          || c.tab === state);
  };

  /* Helper functions */
  var updateCurrentLimit = function() {
    c.options.showLimits.current = c.options.showLimits[c.tab];
  };

  var setTabLimit = function(tab, limit) {
    c.options.showLimits[tab] = limit;
    updateCurrentLimit();
  };

  var getImplemented = function(recos) {
    return recos.idList.filter(function(id) {
      return recos.idMap[id].state == c.states.implemented;
    }).map(function(id) {
      return recos.idMap[id];
    });
  };

  var updateCount = function(state, delta) {
    if(state === c.states.all || state === c.states.accepted || state === c.states.implemented) {
       c.counts[state] += delta;
       if(c.counts[state] &lt;= c.options.maxResults)
        setTabLimit(state, c.counts[state]);
    }
  };

  /* View handler functions */
  c.canShowMore = function(tab) {
    return c.options.showLimits.current &lt; c.counts[tab];
  };

  /* Click handlers */
  c.getStarted = function() {
  };

  c.showMore = function(tab) {
    setTabLimit(tab, c.counts[tab]);
  };

  c.showLess = function(tab) {
    setTabLimit(tab, Math.min(c.counts[tab], c.options.maxResults));
  };

  c.remove = function(id) {
    spModal.confirm(c.data.messages.confirmReject).then(function() {
      c.updateState(id, c.states.rejected);
    });
  };

  c.focusActiveTab = function() {
	$('#tab-' + c.tab).focus();
	$('#tab-' + c.tab + ' &gt; a').focus();
  };

  c.switchTab = function(event, index) {
	var key = null;
	if (event.keyCode === c.KEYS.LEFT || event.keyCode === c.KEYS.UP) {
		key = event.keyCode === c.KEYS.LEFT;
	}
	else if (event.keyCode === c.KEYS.RIGHT || event.keyCode === c.KEYS.DOWN) {
		key = event.keyCode === c.KEYS.RIGHT;
	}
	else if (event.keyCode === c.KEYS.TAB) {
		if(event.shiftKey) {
			$('#chart-container').focus();
		}
		else {
			$('#get-started-0').focus();
		}
		event.preventDefault();
	}

	if(key == null)
		return;

	if(event.keyCode === c.KEYS.LEFT) {
		c.tab =  ((index - 1) &lt; 0) ? c.tabs[c.tabs.length - 1] : c.tabs[index - 1];
	} else if(event.keyCode === c.KEYS.RIGHT){
		c.tab =  ((index + 1) &gt; c.tabs.length - 1) ? c.tabs[0] : c.tabs[index + 1];
	}
	c.focusActiveTab();
	event.preventDefault();

  };

  c.focusTabs = function(event, index){
	  if(event.keyCode === c.KEYS.TAB &amp;&amp; event.shiftKey &amp;&amp; index == 0){
		  c.focusActiveTab();
		  event.preventDefault();
	  }
  };

  c.updateState = function(id, state) {
    c.server.get({reco_id: id, state: state, action: 'update_state'}).then(function (r) {
      if (!r.data.success || !r.data.activity)
        return;

      /* Decrease old state count and increase new state count */
      var reco = c.data.recommendations.idMap[id];
      if(reco.state === c.states.none) {
        if(state !== c.states.accepted)
          updateCount(c.states.all, -1);
      }
      else if(reco.state === c.states.accepted) {
        updateCount(c.states.accepted, -1);
        updateCount(c.states.all, -1);
      }
      updateCount(state, 1);
      reco.state = state;

      /* Update the activity dates */
      reco.actionDate = r.data.activity.actionDate;
      reco.savedDisplay = r.data.activity.savedDisplay;
      reco.implementedDisplay = r.data.activity.implementedDisplay;
      reco.implementedDateNumeric = r.data.activity.implementedDateNumeric;
    });
  };
}]]&gt;&lt;/client_script&gt;
        &lt;controller_as&gt;c&lt;/controller_as&gt;
        &lt;css&gt;.recommendations-menu {
  margin-bottom: 12px;

  .nav-tabs .item a {
    color: inherit;
    text-transform: uppercase;
  }

  .nav-tabs .item a:hover {
    border-bottom-width: 3px;
  }

  .nav-tabs .item a.selected {
    font-weight: 600;
    border-bottom: 3px solid #428bca;
  }
}

.recommendations-container {
  margin-bottom: 50px;

  .panel-body {
    padding: 20px 30px;
  }

  .recommendation {

    .r-name {
      font-size: 16px;
      font-weight: 600;
    }

    .remove-icon {
      color: inherit;
    }

    .r-content &amp;gt; ol,
    .r-content &amp;gt; ul {
      list-style-position:outside;
      padding-left: 14px;
    }

    .r-actions {
      .btn.btn-link {padding-left: 0;}
      .btn.r-get-started { border-radius:3px; }
      .btn { margin-right: 40px; }
      .btn:last-child { margin-right: 0 }

      .r-state-info {
        display: inline-block;
        padding: 6px 12px 6px 0;
        color: #999;
      }
    }

    .implemented-container {
      min-width: 50px;
      max-width: 50px;
    }

    .implemented-number {
      padding: 3px 8px;
      border-radius: 3px;
    }

    .r-dib {
      display: inline-block;
      vertical-align: top;
    }

    .r-actions,
    .implemented-number {
      margin-top: 10px;
      margin-bottom: 10px;
    }

  }
}

@media screen and (max-width: 767px) {
  .r-actions .btn { margin-right: 200px !important; }
  .r-actions .btn-primary { margin-bottom:10px; }
}&lt;/css&gt;
        &lt;data_table&gt;sp_instance&lt;/data_table&gt;
        &lt;demo_data&gt;{
	"href": "www.google.com",
	"button_text": "Go to google"
}&lt;/demo_data&gt;
        &lt;description/&gt;
        &lt;docs/&gt;
        &lt;field_list/&gt;
        &lt;has_preview&gt;false&lt;/has_preview&gt;
        &lt;id&gt;recommendations&lt;/id&gt;
        &lt;internal&gt;false&lt;/internal&gt;
        &lt;link/&gt;
        &lt;name&gt;Benchmarks Recommendations&lt;/name&gt;
        &lt;option_schema&gt;[{"name":"trackingid","section":"Data","label":"Tracking ID","type":"string"},{"name":"cookiedomain","section":"Data","label":"Cookie Domain","type":"string"}]&lt;/option_schema&gt;
        &lt;public&gt;false&lt;/public&gt;
        &lt;roles&gt;sn_bm_client.benchmark_recommendation_viewer&lt;/roles&gt;
        &lt;script&gt;&lt;![CDATA[function updateState(mgr, recoId, state) {
  var result = {success: false};
  var activity = null;

  if (gs.nil(recoId))
    return result;

  if (state === 'accepted')
    activity = mgr.accept(recoId);

  else if (state === 'rejected')
    activity = mgr.reject(recoId);

  else if (state === 'implemented')
    activity = mgr.setImplemented(recoId);

  if (!gs.nil(activity))
    result = {success: true, activity: activity};

  return result;
}



(function() {
  /* translated messages */
  data.messages = {
    confirmReject: gs.getMessage('This will remove the recommendation permanently and you will not see this in current or future recommendation list.')
  };
  options.maxResults = 5;

  var mgr = new RecommendationManager();

  if (!input) {
    var indicatorId = $sp.getParameter('iid');
    data.indicatorId = indicatorId;
    data.recommendations = mgr.getLastMonth(indicatorId);

    var counts = data.recommendations.counts;
    options.showLimits = {all: Math.min(options.maxResults, counts.all),
                          current: options.maxResults,
                          accepted: Math.min(options.maxResults, counts.accepted),
                          implemented: Math.min(options.maxResults, counts.implemented)};

  } else {
    var action = input.action;
    if (gs.nil(action))
      return;

    if (action == 'update_state') {
      var result = updateState(mgr, input.reco_id, input.state);
      data.success = result.success;
      data.activity = result.activity;
    }
  }
})();]]&gt;&lt;/script&gt;
        &lt;servicenow&gt;false&lt;/servicenow&gt;
        &lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;
        &lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;
        &lt;sys_created_on&gt;2017-07-25 19:01:50&lt;/sys_created_on&gt;
        &lt;sys_id&gt;e03050735b400300514d484c11f91a80&lt;/sys_id&gt;
        &lt;sys_mod_count&gt;23&lt;/sys_mod_count&gt;
        &lt;sys_name&gt;Benchmarks Recommendations&lt;/sys_name&gt;
        &lt;sys_package display_value="Benchmark Client" source="sn_bm_client"&gt;3ad18693db92220004997878f0b8f516&lt;/sys_package&gt;
        &lt;sys_policy/&gt;
        &lt;sys_scope display_value="Benchmark Client"&gt;3ad18693db92220004997878f0b8f516&lt;/sys_scope&gt;
        &lt;sys_update_name&gt;sp_widget_e03050735b400300514d484c11f91a80&lt;/sys_update_name&gt;
        &lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;
        &lt;sys_updated_on&gt;2017-09-22 21:19:17&lt;/sys_updated_on&gt;
        &lt;template&gt;&lt;![CDATA[&lt;div ng-if="c.counts.all &gt; 0 || c.counts.implemented &gt; 0"&gt;
  &lt;!-- Menu items --&gt;
  &lt;div class="recommendations-menu"&gt;
    &lt;ul class="nav nav-tabs hidden-xs" role="tablist"&gt;
      &lt;li class="item" id="tab-all" ng-click="c.tab = c.states.all" ng-keydown="c.switchTab($event, 0)" role="tab" tabindex="-1"&gt;
        &lt;a class="r-tab" ng-class="c.tab === c.states.all ? 'selected' : ''" href&gt;${Recommendations}  &amp;nbsp; ({{c.counts.all}})&lt;/a&gt;
      &lt;/li&gt;
      &lt;li class="item" id="tab-implemented" ng-click="c.tab = c.states.implemented" ng-keydown="c.switchTab($event, 1)" role="tab" tabindex="-1"&gt;
        &lt;a class="r-tab" ng-class="c.tab === c.states.implemented ? 'selected' : ''" href&gt;
          ${Implemented}  &amp;nbsp; ({{c.counts.implemented}})
        &lt;/a&gt;
      &lt;/li&gt;
      &lt;li class="item" id="tab-accepted" ng-click="c.tab = c.states.accepted" ng-keydown="c.switchTab($event, 2)" role="tab" tabindex="-1"&gt;
        &lt;a class="r-tab" ng-class="c.tab === c.states.accepted ? 'selected' : ''" href&gt;
          ${Saved} &amp;nbsp; ({{c.counts.accepted}})
        &lt;/a&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class="mobile-menu visible-xs"&gt;
      &lt;select class="sn-select-basic" name="r-tab-selector"
              id="r-tab-selector" ng-model="c.tab" aria-label="${Select type}"&gt;
        &lt;option value="{{c.states.all}}"&gt;${Recommendations}  &amp;nbsp; ({{c.counts.all}})&lt;/option&gt;
        &lt;option value="{{c.states.implemented}}"&gt;${Implemented}  &amp;nbsp; ({{c.counts.implemented}})&lt;/option&gt;
        &lt;option value="{{c.states.accepted}}"&gt;${Saved} &amp;nbsp; ({{c.counts.accepted}})&lt;/option&gt;
      &lt;/select&gt;
    &lt;/div&gt;
  &lt;/div&gt;

  &lt;div class="recommendations-container"&gt;

    &lt;!-- Empty list messages --&gt;
    &lt;div class="alert alert-info" ng-show="c.counts[c.tab] &lt;= 0"&gt;
      &lt;div ng-show="c.tab == c.states.all"&gt;${No recommendations for this month}&lt;/div&gt;
      &lt;div ng-show="c.tab == c.states.accepted"&gt;${No saved recommendations}&lt;/div&gt;
      &lt;div ng-show="c.tab == c.states.implemented"&gt;${No implemented recommendations}&lt;/div&gt;
    &lt;/div&gt;

    &lt;!-- Panel --&gt;
    &lt;div class="recommendation panel"
         ng-repeat="id in data.recommendations.idList | filter: c.recoFilter | limitTo: options.showLimits.current track by $id(data.recommendations.idMap[id])"
         ng-init="reco = data.recommendations.idMap[id]" ng-show="reco.state != c.states.rejected &amp;&amp; (c.tab === reco.state || c.tab == c.states.all)"  id="{{reco.sys_id}}"&gt;
      &lt;div class="panel-body"&gt;

        &lt;div class="row"&gt;

          &lt;div class="col-xs-2 col-sm-1 implemented-container" ng-if="c.tab === c.states.implemented"&gt;
            &lt;div class="implemented-number r-dib bg-primary" aria-hidden="true" ng-if="!!reco.letter"&gt;&lt;strong&gt;{{reco.letter}}&lt;/strong&gt;&lt;/div&gt;
          &lt;/div&gt;

          &lt;div class="col-xs-10 col-sm-11" ng-class="(c.tab === c.states.implemented) ? 'col-sm-11' : 'col-xs-12 col-sm-12'"&gt;

            &lt;!-- Content section --&gt;
            &lt;div class="row"&gt;
              &lt;div class="col-xs-11"&gt;
                &lt;h4 class="r-name"&gt;{{reco.name}}&lt;/h4&gt;
                &lt;div class="r-content" ng-bind-html="c.trustAsHtml(reco.content)"&gt;&lt;/div&gt;
                &lt;div class="row r-actions"&gt;
             		&lt;div class="col-xs-12"&gt;
                		&lt;div class="btn-group"&gt;
                  			&lt;a class="btn btn-primary r-get-started" id="get-started-{{$index}}" ng-keydown="c.focusTabs($event, $index)" ng-if="!!reco.url &amp;&amp; reco.state != c.states.implemented"
                     		href="{{reco.url}}" target="_blank"&gt;${Get Started}&lt;/a&gt;
                  			&lt;button class="btn btn-link r-mark-implemented" ng-if="reco.state != c.states.implemented" ng-class="!reco.url ? 'first-btn' : ''"
                          	ng-click="c.updateState(id, c.states.implemented)"&gt;${Mark as Implemented}&lt;/button&gt;
                  			&lt;button class="btn btn-link r-save" ng-if="reco.state === c.states.none"
                          	ng-click="c.updateState(id, c.states.accepted)"&gt;${Save for Later}&lt;/button&gt;
                  			&lt;div class="r-state-info r-saved-date" ng-if="reco.state === c.states.accepted"&gt;{{reco.savedDisplay}}&lt;/div&gt;
                  			&lt;div class="r-state-info r-implemented-date" ng-if="reco.state === c.states.implemented"&gt;{{reco.implementedDisplay}}&lt;/div&gt;
                		&lt;/div&gt;
                  &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;div class="col-xs-1 text-right" &gt;
                &lt;button class="btn btn-link remove-icon" id="close-{{$index}}" ng-click="c.remove(id)"
                        ng-if="reco.state != c.states.implemented" aria-label="${Remove recommendation}"&gt;
                  &lt;span class="fa fa-close"&gt;&lt;/span&gt;
                &lt;/button&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/div&gt;

        &lt;/div&gt;

      &lt;/div&gt;
    &lt;/div&gt;

    &lt;div class="row" ng-if="c.counts[c.tab] &gt; 0"&gt;
      &lt;div class="col-xs-12 text-center"&gt;
        &lt;button class="btn btn-default" ng-show="c.canShowMore(c.tab)"
                ng-click="c.showMore(c.tab)"&gt;${Show more}&lt;/button&gt;
        &lt;button class="btn btn-default" ng-show="options.showLimits.current &gt; options.maxResults"
                ng-click="c.showLess(c.tab)"&gt;${Show less}&lt;/button&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/div&gt;]]&gt;&lt;/template&gt;
    &lt;/sp_widget&gt;
&lt;/record_update&gt;
</payload>
        <sys_class_name>sys_metadata_link</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-05-31 14:14:30</sys_created_on>
        <sys_id>099757f84f313300496900fe9310c7cf</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Benchmarks Recommendations</sys_name>
        <sys_package display_value="FairfaxCounty" source="x_339628_fairfaxco">b1051ad14f413300496900fe9310c7cc</sys_package>
        <sys_policy/>
        <sys_scope display_value="FairfaxCounty">b1051ad14f413300496900fe9310c7cc</sys_scope>
        <sys_update_name>sys_metadata_link_099757f84f313300496900fe9310c7cf</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-31 14:14:30</sys_updated_on>
        <tablename>sp_widget</tablename>
    </sys_metadata_link>
</record_update>
